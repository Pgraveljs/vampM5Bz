@inject IUserData _db
@inject AppData _appData


<EditForm Model="codeModel" OnValidSubmit="@SetUser" class="row">
    <DataAnnotationsValidator />

    <div class="d-flex justify-content-center">
        <img src="/icons/rpg-game.png" alt="Image" height="150">
        <div class="pt-5 text-start">
            <h4 class="fw-bold">Entrer votre code Héros</h4>
            <InputText type="password" id="code" @bind-Value="codeModel.Code" class="form-control" placeholder="Code a 4 digits ..." />
            <ValidationMessage For="()=>codeModel.Code" />
            <ul class="validation-errors">
                <li class="validation-message">@error</li>
            </ul>
        </div>
    </div>
</EditForm>


@code {
    private string error = "";
    private DisplayCodeModel codeModel = new();

    private async Task SetUser()
    {
        var user = await _db.GetUser(codeModel.Code);
        if (user is not null)
        {
            _appData.SetUser(user);
            error = "";
        }
        else
        {
            error = "Le code est invalide.";
        }
    }
}
