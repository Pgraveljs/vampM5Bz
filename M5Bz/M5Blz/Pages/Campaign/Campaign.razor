@page "/Campaign"
@inject AppData _appData
@inject NavigationManager _navigationManager
@inject ICampaignData _db

<div class="d-flex  justify-content-between">
    <_ClickableBaseCard Name="Gestion des campagnes"
                        IconPath="/icons/drame.png">
    </_ClickableBaseCard>

    <_ClickableBaseCard Id="@(_appData.SelectedCoreRules.Id)"
                        Name="@(_appData.SelectedCoreRules.Name)"
                        IconPath="@(_appData.SelectedCoreRules.IconPath)"
                        FloatEnd="true">
    </_ClickableBaseCard>

</div>
<hr />

@if (IsLoading)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    if (!Campaigns.Any())
    {
        @*        <EditForm>
            <div class="mb-3">
            <h4>Ajouter une campagne</h4>
            <label for="exampleInputEmail1" class="form-label">Nom</label>
            <input type="text" class="form-control">
            </div>
            <button type="submit" class="btn btn-primary">Ajouter</button>
            </EditForm>*@
    }
    else
    {
        <span>Afficher les campagnes</span>
        <span>Afficher les campagnes</span>
        <span>Afficher les campagnes</span>
    }
}


@code {
    private bool IsLoading { get; set; }
    private List<CampaignModel> Campaigns { get; set; } = new();
    private CampaignModel NewCampaign { get; set; } = new();
    protected override void OnInitialized()
    {
        if (_appData.SelectedCoreRules.Id == 0)
        {
            _navigationManager.NavigateTo("/CoreRules");
        }
    }
    protected override async Task OnAfterRenderAsync(bool fistRender)
    {
        if (fistRender)
        {
            await LoadCampaigns();
        }
    }

    private async Task LoadCampaigns()
    {
        IsLoading = true;
        StateHasChanged();
        await _db.GetCampaigns(_appData.Id, _appData.SelectedCoreRules.Id);
        IsLoading = false;
        StateHasChanged();
    }

}
