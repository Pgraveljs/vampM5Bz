@page "/Campaign"
@inject AppData _appData
@inject NavigationManager _navigationManager
@inject ICampaignData _db

<div class="d-flex  justify-content-between">
    <_ClickableBaseCard Name="Gestion des campagnes"
                        IconPath="/icons/drame.png">
    </_ClickableBaseCard>

    <_ClickableBaseCard Id="@(_appData.SelectedCoreRules.Id)"
                        Name="@(_appData.SelectedCoreRules.Name)"
                        IconPath="@(_appData.SelectedCoreRules.IconPath)"
                        FloatEnd="true">
    </_ClickableBaseCard>

</div>
<hr />

@if (IsLoading)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <EditForm Model="NewCampaign" OnValidSubmit="UpsertCampaign">
        <DataAnnotationsValidator />
        <div class="d-flex">
            <img src="/icons/book.png" alt="Image" height="100">
            <div class="text-start ">
                <div class="form-group p-2">
                    <h4 class="fw-bold">Ajouter une nouvelle campagne</h4>
                    <InputText @bind-Value="NewCampaign.Name" type="text" class="form-control" placeholder="Nom de la nouvelle campagne..."></InputText>
                    <ValidationMessage For="()=>NewCampaign.Name" />
                </div>
            </div>
        </div>
    </EditForm>
    <hr />
}

<table class="table table-striped">
    <caption class="fs-2 caption-top">Liste des campagnes de @_appData.SelectedCoreRules.Name</caption>
    <thead>
        <tr>
            <th scope="col">Nom</th>
            <th scope="col">Date</th>
            <th scope="col">Carnets de Notes</th>
            @if (_appData.SelectedCoreRules.AllowsCharacterCreation)
            {
                <th scope="col">Personnages</th>
            }
            <th scope="col">Effacer la campagne</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var campaign in Campaigns)
        {
            <tr>
                <td class="fw-bold">@campaign.Name</td>
                <td>@campaign.CreationDate</td>
                <td>
                    <img src="/icons/contract.png" alt="Image" height="50" @onclick="() => OnSelectCampaignNotebook(campaign)">
                </td>
                @if (_appData.SelectedCoreRules.AllowsCharacterCreation)
                {
                    <td>
                        <img src="/icons/contact-book.png" alt="Image" height="50">
                    </td>
                }
                <td>
                    <img class="border border-5 border-danger rounded p-1" src="/icons/delete-file.png" alt="Image" height="50">
                </td>
            </tr>
        }

    </tbody>
</table>

@code {
    private bool IsLoading { get; set; }
    private List<CampaignModel> Campaigns { get; set; } = new();
    private CampaignModel NewCampaign { get; set; } = new();
    protected override void OnInitialized()
    {
        if (_appData.SelectedCoreRules.Id == 0)
        {
            _navigationManager.NavigateTo("/CoreRules");
        }
    }
    protected override async Task OnAfterRenderAsync(bool fistRender)
    {
        if (fistRender)
        {
            await LoadCampaigns();
        }
    }

    private async Task LoadCampaigns()
    {
        IsLoading = true;
        StateHasChanged();
        Campaigns = await _db.GetCampaigns(_appData.SelectedUser.Id, _appData.SelectedCoreRules.Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCampaign()
    {
        NewCampaign.CoreRulesId = _appData.SelectedCoreRules.Id;
        NewCampaign.UserId = _appData.SelectedUser.Id;
        NewCampaign.CreationDate = DateTime.Now;

        if (NewCampaign.Id == 0)
        {
            //create
            await _db.InsertCampaign(NewCampaign);
        }
        else
        {
            //update
            await _db.UpdateCampaign(NewCampaign);
        }
        NewCampaign = new();
        await LoadCampaigns();
        //StateHasChanged();
    }

    private void OnSelectCampaignNotebook(CampaignModel campaignModel)
    {
        _appData.SetCampaign(campaignModel);
        _navigationManager.NavigateTo("/Campaign/Notebook");

    }


}
                                                                                                                                                                                        